include version.mak

SDK=../SDK
OBJDIR=./build/mac

TARGET=build/mac.xpl
TARGET_arm=$(OBJDIR)/mac.xpl_arm
TARGET_x86=$(OBJDIR)/mac.xpl_x86

HEADERS=$(wildcard *.h)
SOURCES_C=$(wildcard *.c)
SOURCES_CPP=$(wildcard *.cpp)
OBJECTS_=$(SOURCES_C:.c=.o) $(SOURCES_CPP:.cpp=.o)

OBJECTS_arm=$(addprefix $(OBJDIR)/, $(OBJECTS_:.o=.o_arm))
OBJECTS_x86=$(OBJECTS_arm:.o_arm=.o_x86)

# if we run this script on Linux it's osxcross
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
    CCx=clang -target x86_64-apple-macos13
    CCa=clang -target arm64-apple-macos13

    CXXx=clang++ -target x86_64-apple-macos13
    CXXa=clang++ -target arm64-apple-macos13
else
    PATH:=/osxcross/target/bin:$(PATH)
    CCx=o64-clang -mmacosx-version-min=13.0
    CCa=oa64-clang -mmacosx-version-min=13.0

    CXXx=o64-clang++ -mmacosx-version-min=13.0
    CXXa=oa64-clang++ -mmacosx-version-min=13.0
endif

DEFS= -DAPL=1 -fPIC -fno-stack-protector -fvisibility=hidden

CFLAGS+=-O2 -Wall -I. -I$(SDK)/CHeaders/XPLM -I$(SDK)/CHeaders/Widgets -DVERSION=\"$(VERSION)\" $(DEFS)
CXXFLAGS:=--std=c++20 $(CFLAGS)

LNFLAGS+=-dynamiclib -shared -rdynamic -fvisibility=hidden -Wl,-exported_symbols_list -Wl,linkscript.mac

# https://pewpewthespells.com/blog/static_and_dynamic_libraries.html
LIBS+= -F $(SDK)/Libraries/Mac -framework XPLM -framework XPWidgets

# ships with macOS
LIBS+=-liconv

#test:
#    $(foreach var,$(.VARIABLES),$(info $(var) = $($(var))))

all: $(TARGET)
    $(shell [ -d $(OBJDIR) ] || mkdir -p $(OBJDIR))

$(OBJDIR)/%.o_arm: %.c version.mak
	$(CCa) $(CFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_x86: %.c version.mak
	$(CCx) $(CFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_arm: %.cpp version.mak
	$(CXXa) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_x86: %.cpp version.mak
	$(CXXx) $(CXXFLAGS) -o $@ -c $<

$(TARGET_arm): $(OBJECTS_arm)
	$(CXXa) -o $@ $(ARCH_arm) $(LNFLAGS) $(OBJECTS_arm) $(LIBS)

$(TARGET_x86): $(OBJECTS_x86)
	$(CXXx) -o $@ $(ARCH_x86) $(LNFLAGS) $(OBJECTS_x86) $(LIBS)

$(TARGET): $(TARGET_arm) $(TARGET_x86)
	lipo -create -output $@ $(TARGET_arm) $(TARGET_x86)

clean:
	rm -f $(TARGET) $(OBJDIR)/*.o_* $(OBJDIR)/*.xpl_*
