
SDK=../SDK
#PLUGDIR=/F/X-Plane-12-vanilla/Resources/plugins/AutoDGS
PLUGDIR=/E/X-Plane-12-test/Resources/plugins/AutoDGS

include version.mak

OBJDIR=./build/win

TARGET=build/win.xpl
HEADERS=$(wildcard *.h)
SOURCES_C=$(wildcard *.c)
SOURCES_CPP=$(wildcard *.cpp)
OBJECTS:=$(SOURCES_C:.c=.o) $(SOURCES_CPP:.cpp=.o)

# all sources to the dep files
DEPFILES=$(SOURCES_CPP:%.cpp=$(DEPDIR)/%.d) $(SOURCES_C:%.c=$(DEPDIR)/%.d)

DEPDIR := $(OBJDIR)/.deps
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.d

OBJECTS:=$(addprefix $(OBJDIR)/, $(OBJECTS))
#$(info $(OBJECTS))

CC=gcc
CXX=g++
LD=g++

COMMON_CFLAGS=-O2 -s -Wall -fdiagnostics-color -Wno-format-overflow \
    -DIBM -DWINDOWS -DWIN32 \
	-I. -I$(SDK)/CHeaders/XPLM -I$(SDK)/CHeaders/Widgets \
    -DVERSION=\"$(VERSION)\" \
    $(DEFINES)

CFLAGS=-mdll $(COMMON_CFLAGS)
CXXFLAGS:=--std=c++20 $(CFLAGS)
LDFLAGS=-shared -static-libgcc -static
LIBS=-L$(SDK)/Libraries/Win -lXPLM_64 -lXPWidgets_64

COMPILE.cpp = $(CXX) $(CXXFLAGS) $(DEPFLAGS) -c
COMPILE.c = $(CC) $(CFLAGS) $(DEPFLAGS) -c

$(OBJDIR)/%.o: %.c $(DEPDIR)/%.d version.mak | $(DEPDIR)
	$(COMPILE.c) $(CFLAGS) -o $@ -c $<

$(OBJDIR)/%.o: %.cpp $(DEPDIR)/%.d version.mak | $(DEPDIR)
	$(COMPILE.cpp) $(CXXFLAGS) -o $@ -c $<

all: $(TARGET)
    $(shell [ -d $(OBJDIR) ] || mkdir -p $(OBJDIR))

$(TARGET): $(OBJECTS)
	$(LD) -o $(TARGET) $(LDFLAGS) $(OBJECTS) $(LIBS)

$(DEPDIR): ; @mkdir -p $@

$(DEPFILES):
include $(wildcard $(DEPFILES))

clean:
	rm -f $(TARGET) $(OBJDIR)/*.o*

# install the just compiled target
install: $(TARGET)
	mkdir -p "$(PLUGDIR)/64"
	cp -p $(TARGET) "$(PLUGDIR)/64/."

# create the whole plugin directory
plugin: $(TARGET)
	mkdir -p "$(PLUGDIR)/64"
	mkdir -p "$(PLUGDIR)/resources"
	mkdir -p "$(PLUGDIR)/lua_sample"
	cp -p $(TARGET) "$(PLUGDIR)/64/."
	cp -p DGSs-*/* "$(PLUGDIR)/resources/."
	cp -p *.lua "$(PLUGDIR)/lua_sample/."
	cp -p acf_use_engine_running.txt "$(PLUGDIR)/."
	cp -p acf_dont_connect_jetway.txt "$(PLUGDIR)/."
