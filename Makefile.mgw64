.SUFFIXES: .obj

include version.mak

OBJDIR=./build/win

TARGET=build/win.xpl
HEADERS=$(wildcard *.h)
SOURCES_C=$(wildcard *.c)
SOURCES_CPP=$(wildcard *.cpp)
OBJECTS:=$(SOURCES_C:.c=.o) $(SOURCES_CPP:.cpp=.o)

LIBACFUTILS_VERSION="hotbso subset"
SDK=../SDK
#PLUGDIR=/F/X-Plane-12-vanilla/Resources/plugins/AutoDGS
PLUGDIR=/E/X-Plane-12-test/Resources/plugins/AutoDGS
OBJECTS:=$(addprefix $(OBJDIR)/, $(OBJECTS))
$(info $(OBJECTS))

LACFU_SOURCES=$(wildcard libacfutils/src/*.c)
LACFU_OBJECTS=$(addprefix $(OBJDIR)/, $(notdir $(LACFU_SOURCES:.c=.o)))

CC=gcc
CXX=g++
LD=g++

COMMON_CFLAGS=-O2 -s -Wall -fdiagnostics-color -Wno-format-overflow \
    -D_POSIX_C_SOURCE  \
    -DIBM -DWINDOWS -DWIN32 -DWINVER=0x0A00 -D_WIN32_WINNT=0x0A00 \
	-I. -I$(SDK)/CHeaders/XPLM -I$(SDK)/CHeaders/Widgets -Ilibacfutils/src/ \
    -DVERSION=\"$(VERSION)\" \
    $(DEFINES)

CFLAGS=-mdll $(COMMON_CFLAGS)
LACFU_CFLAGS=-DUNICODE -DLIBACFUTILS_VERSION='$(LIBACFUTILS_VERSION)' $(COMMON_CFLAGS)
CXXFLAGS:=--std=c++20 $(CFLAGS)
LDFLAGS=-shared -static-libgcc -static -lpthread
LIBS=-L$(SDK)/Libraries/Win -lDbghelp -lpsapi -lXPLM_64 -lXPWidgets_64 -lz -liconv

all: $(TARGET)
    $(shell [ -d $(OBJDIR) ] || mkdir -p $(OBJDIR))

$(OBJDIR)/%.o: %.c version.mak $(HEADERS)
	$(CC) $(CFLAGS) -o $@ -c $<

$(OBJDIR)/%.o: %.cpp version.mak $(HEADERS)
	$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/%.o: libacfutils/src/%.c
	$(CC) $(LACFU_CFLAGS) -o $@ -c $<

$(TARGET): $(OBJECTS) $(LACFU_OBJECTS)
	$(LD) -o $(TARGET) $(LDFLAGS) $(OBJECTS) $(LACFU_OBJECTS) $(LIBS)

clean:
	rm -f $(TARGET) $(OBJDIR)/*.o*

# install the just compiled target
install: $(TARGET)
	mkdir -p "$(PLUGDIR)/64"
	cp -p $(TARGET) "$(PLUGDIR)/64/."

# create the whole plugin directory
plugin: $(TARGET)
	mkdir -p "$(PLUGDIR)/64"
	mkdir -p "$(PLUGDIR)/resources"
	mkdir -p "$(PLUGDIR)/lua_sample"
	cp -p $(TARGET) "$(PLUGDIR)/64/."
	cp -p DGSs-*/* "$(PLUGDIR)/resources/."
	cp -p *.lua "$(PLUGDIR)/lua_sample/."
	cp -p acf_use_engine_running.txt "$(PLUGDIR)/."
	cp -p acf_dont_connect_jetway.txt "$(PLUGDIR)/."
